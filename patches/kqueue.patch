commit 6ee7032bc79c832eb9ab7b36640661b1c21252dc
Author: Ruslan Nikolaev <rnikola@vt.edu>
Date:   Sat Dec 22 17:52:30 2018 -0500

    kqueue patch

diff --git a/share/man/man9/kfilter_register.9 b/share/man/man9/kfilter_register.9
index 43ba379b8c40..f405819140aa 100644
--- a/share/man/man9/kfilter_register.9
+++ b/share/man/man9/kfilter_register.9
@@ -97,6 +97,7 @@ struct filterops {
 				/* called when knote is DELETEd */
 	int	(*f_event)(struct knote *kn, long hint);
 				/* called when event is triggered */
+	void	(*f_touch)(struct knote *kn, struct kevent *kev, long hint);
 };
 .Ed
 .Pp
diff --git a/sys/arch/amiga/dev/event.c b/sys/arch/amiga/dev/event.c
index 30a6ae33e4a3..0e53c48f198c 100644
--- a/sys/arch/amiga/dev/event.c
+++ b/sys/arch/amiga/dev/event.c
@@ -191,7 +191,7 @@ filt_evread(struct knote *kn, long hint)
 }
 
 static const struct filterops ev_filtops =
-	{ 1, NULL, filt_evrdetach, filt_evread };
+	{ 1, NULL, filt_evrdetach, filt_evread, NULL };
 
 int
 ev_kqfilter(struct evvar *ev, struct knote *kn)
diff --git a/sys/arch/arc/dev/opms.c b/sys/arch/arc/dev/opms.c
index 2791cdd6a426..df76a26ca003 100644
--- a/sys/arch/arc/dev/opms.c
+++ b/sys/arch/arc/dev/opms.c
@@ -473,7 +473,7 @@ filt_opmsread(struct knote *kn, long hint)
 }
 
 static const struct filterops opmsread_filtops =
-	{ 1, NULL, filt_opmsrdetach, filt_opmsread };
+	{ 1, NULL, filt_opmsrdetach, filt_opmsread, NULL };
 
 int
 opmskqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/arch/arm/xscale/pxa2x0_apm.c b/sys/arch/arm/xscale/pxa2x0_apm.c
index f27b56901f82..3910aa3273dd 100644
--- a/sys/arch/arm/xscale/pxa2x0_apm.c
+++ b/sys/arch/arm/xscale/pxa2x0_apm.c
@@ -105,7 +105,7 @@ int	filt_apmread(struct knote *kn, long hint);
 int	apmkqfilter(dev_t dev, struct knote *kn);
 
 struct filterops apmread_filtops =
-	{ 1, NULL, filt_apmrdetach, filt_apmread};
+	{ 1, NULL, filt_apmrdetach, filt_apmread, NULL};
 #endif
 
 /*
diff --git a/sys/arch/atari/dev/event.c b/sys/arch/atari/dev/event.c
index 1db501e53c93..85ec6bb8f05e 100644
--- a/sys/arch/atari/dev/event.c
+++ b/sys/arch/atari/dev/event.c
@@ -190,7 +190,7 @@ filt_evread(struct knote *kn, long hint)
 }
 
 static const struct filterops ev_filtops =
-	{ 1, NULL, filt_evrdetach, filt_evread };
+	{ 1, NULL, filt_evrdetach, filt_evread, NULL };
 
 int
 ev_kqfilter(struct evvar *ev, struct knote *kn)
diff --git a/sys/arch/landisk/dev/button.c b/sys/arch/landisk/dev/button.c
index d73e4fd18f6f..a97019db54bd 100644
--- a/sys/arch/landisk/dev/button.c
+++ b/sys/arch/landisk/dev/button.c
@@ -313,10 +313,10 @@ filt_btn_read(struct knote *kn, long hint)
 }
 
 static const struct filterops btn_read_filtops =
-    { 1, NULL, filt_btn_rdetach, filt_btn_read };
+    { 1, NULL, filt_btn_rdetach, filt_btn_read, NULL };
 
 static const struct filterops btn_write_filtops =
-    { 1, NULL, filt_btn_rdetach, filt_seltrue };
+    { 1, NULL, filt_btn_rdetach, filt_seltrue, NULL };
 
 int
 btnkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/arch/mac68k/dev/aed.c b/sys/arch/mac68k/dev/aed.c
index 741700a0ac93..cfee52548037 100644
--- a/sys/arch/mac68k/dev/aed.c
+++ b/sys/arch/mac68k/dev/aed.c
@@ -598,10 +598,10 @@ filt_aedread(struct knote *kn, long hint)
 }
 
 static const struct filterops aedread_filtops =
-	{ 1, NULL, filt_aedrdetach, filt_aedread };
+	{ 1, NULL, filt_aedrdetach, filt_aedread, NULL };
 
 static const struct filterops aed_seltrue_filtops =
-	{ 1, NULL, filt_aedrdetach, filt_seltrue };
+	{ 1, NULL, filt_aedrdetach, filt_seltrue, NULL };
 
 int
 aedkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/arch/macppc/dev/aed.c b/sys/arch/macppc/dev/aed.c
index 211f1385d943..dae26d110727 100644
--- a/sys/arch/macppc/dev/aed.c
+++ b/sys/arch/macppc/dev/aed.c
@@ -603,10 +603,10 @@ filt_aedread(struct knote *kn, long hint)
 }
 
 static const struct filterops aedread_filtops =
-	{ 1, NULL, filt_aedrdetach, filt_aedread };
+	{ 1, NULL, filt_aedrdetach, filt_aedread, NULL };
 
 static const struct filterops aed_seltrue_filtops =
-	{ 1, NULL, filt_aedrdetach, filt_seltrue };
+	{ 1, NULL, filt_aedrdetach, filt_seltrue, NULL };
 
 int
 aedkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/arch/macppc/dev/apm.c b/sys/arch/macppc/dev/apm.c
index c96f2aac2b2d..8250ff5898c9 100644
--- a/sys/arch/macppc/dev/apm.c
+++ b/sys/arch/macppc/dev/apm.c
@@ -432,7 +432,7 @@ filt_apmread(struct knote *kn, long hint)
 }
 
 static struct filterops apmread_filtops =
-	{ 1, NULL, filt_apmrdetach, filt_apmread};
+	{ 1, NULL, filt_apmrdetach, filt_apmread, NULL};
 
 int
 apmkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/arch/mips/ralink/ralink_gpio.c b/sys/arch/mips/ralink/ralink_gpio.c
index 28a0698eea69..ce934aed1609 100644
--- a/sys/arch/mips/ralink/ralink_gpio.c
+++ b/sys/arch/mips/ralink/ralink_gpio.c
@@ -498,7 +498,8 @@ static struct filterops app_fops = {
 	0,
 	gpio_event_app_user_attach,
 	gpio_event_app_user_detach,
-	gpio_event_app_user_event
+	gpio_event_app_user_event,
+	NULL
 };
 static struct callout led_tick_callout;
 static int gpio_driver_blink_leds = 1;
diff --git a/sys/arch/sandpoint/sandpoint/satmgr.c b/sys/arch/sandpoint/sandpoint/satmgr.c
index 87ac1dcb42b1..3e2fd8627f10 100644
--- a/sys/arch/sandpoint/sandpoint/satmgr.c
+++ b/sys/arch/sandpoint/sandpoint/satmgr.c
@@ -603,7 +603,7 @@ filt_read(struct knote *kn, long hint)
 }
 
 static const struct filterops read_filtops = {
-	1, NULL, filt_rdetach, filt_read
+	1, NULL, filt_rdetach, filt_read, NULL
 };
 
 static int
diff --git a/sys/arch/shark/shark/opms.c b/sys/arch/shark/shark/opms.c
index 65031227695a..4889798daf2e 100644
--- a/sys/arch/shark/shark/opms.c
+++ b/sys/arch/shark/shark/opms.c
@@ -980,7 +980,7 @@ filt_opmsread(struct knote *kn, long hint)
 }
 
 static const struct filterops opmsread_filtops =
-	{ 1, NULL, filt_opmsrdetach, filt_opmsread };
+	{ 1, NULL, filt_opmsrdetach, filt_opmsread, NULL };
 
 int
 opmskqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/arch/sparc/dev/tctrl.c b/sys/arch/sparc/dev/tctrl.c
index 839b515f9542..be50f4f493b5 100644
--- a/sys/arch/sparc/dev/tctrl.c
+++ b/sys/arch/sparc/dev/tctrl.c
@@ -1231,7 +1231,7 @@ filt_tctrlread(struct knote *kn, long hint)
 }
 
 static const struct filterops tctrlread_filtops =
-	{ 1, NULL, filt_tctrlrdetach, filt_tctrlread };
+	{ 1, NULL, filt_tctrlrdetach, filt_tctrlread, NULL };
 
 int
 tctrlkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/arch/x68k/dev/event.c b/sys/arch/x68k/dev/event.c
index 5f4788c929db..604760445a70 100644
--- a/sys/arch/x68k/dev/event.c
+++ b/sys/arch/x68k/dev/event.c
@@ -217,7 +217,7 @@ filt_evread(struct knote *kn, long hint)
 }
 
 static const struct filterops ev_filtops =
-	{ 1, NULL, filt_evrdetach, filt_evread };
+	{ 1, NULL, filt_evrdetach, filt_evread, NULL };
 
 int
 ev_kqfilter(struct evvar *ev, struct knote *kn)
diff --git a/sys/coda/coda_psdev.c b/sys/coda/coda_psdev.c
index edba814da931..30a56a54c10d 100644
--- a/sys/coda/coda_psdev.c
+++ b/sys/coda/coda_psdev.c
@@ -487,7 +487,7 @@ filt_vc_nb_read(struct knote *kn, long hint)
 }
 
 static const struct filterops vc_nb_read_filtops =
-	{ 1, NULL, filt_vc_nb_detach, filt_vc_nb_read };
+	{ 1, NULL, filt_vc_nb_detach, filt_vc_nb_read, NULL };
 
 int
 vc_nb_kqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/apm/apm.c b/sys/dev/apm/apm.c
index ad54c2a11429..07b71bcbcd26 100644
--- a/sys/dev/apm/apm.c
+++ b/sys/dev/apm/apm.c
@@ -884,7 +884,7 @@ filt_apmread(struct knote *kn, long hint)
 }
 
 static const struct filterops apmread_filtops =
-	{ 1, NULL, filt_apmrdetach, filt_apmread };
+	{ 1, NULL, filt_apmrdetach, filt_apmread, NULL };
 
 int
 apmkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/audio.c b/sys/dev/audio.c
index 7a11eeee06f1..216445c0412f 100644
--- a/sys/dev/audio.c
+++ b/sys/dev/audio.c
@@ -3421,7 +3421,7 @@ filt_audioread(struct knote *kn, long hint)
 }
 
 static const struct filterops audioread_filtops =
-	{ 1, NULL, filt_audiordetach, filt_audioread };
+	{ 1, NULL, filt_audiordetach, filt_audioread, NULL };
 
 static void
 filt_audiowdetach(struct knote *kn)
@@ -3466,7 +3466,7 @@ filt_audiowrite(struct knote *kn, long hint)
 }
 
 static const struct filterops audiowrite_filtops =
-	{ 1, NULL, filt_audiowdetach, filt_audiowrite };
+	{ 1, NULL, filt_audiowdetach, filt_audiowrite, NULL };
 
 int
 audio_kqfilter(struct audio_chan *chan, struct knote *kn)
diff --git a/sys/dev/hpc/apm/apmdev.c b/sys/dev/hpc/apm/apmdev.c
index 00331fa032f4..c75d6d9bece4 100644
--- a/sys/dev/hpc/apm/apmdev.c
+++ b/sys/dev/hpc/apm/apmdev.c
@@ -926,7 +926,7 @@ filt_apmread(struct knote *kn, long hint)
 }
 
 static const struct filterops apmread_filtops =
-	{ 1, NULL, filt_apmrdetach, filt_apmread };
+	{ 1, NULL, filt_apmrdetach, filt_apmread, NULL };
 
 int
 apmdevkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/ir/irframe_tty.c b/sys/dev/ir/irframe_tty.c
index bc9e14c98dda..602ccd591016 100644
--- a/sys/dev/ir/irframe_tty.c
+++ b/sys/dev/ir/irframe_tty.c
@@ -824,9 +824,9 @@ filt_irframetwrite(struct knote *kn, long hint)
 }
 
 static const struct filterops irframetread_filtops =
-	{ 1, NULL, filt_irframetrdetach, filt_irframetread };
+	{ 1, NULL, filt_irframetrdetach, filt_irframetread, NULL };
 static const struct filterops irframetwrite_filtops =
-	{ 1, NULL, filt_irframetwdetach, filt_irframetwrite };
+	{ 1, NULL, filt_irframetwdetach, filt_irframetwrite, NULL };
 
 int
 irframet_kqfilter(void *h, struct knote *kn)
diff --git a/sys/dev/isa/satlink.c b/sys/dev/isa/satlink.c
index a4a15d1e995b..490c9ae1ebc7 100644
--- a/sys/dev/isa/satlink.c
+++ b/sys/dev/isa/satlink.c
@@ -457,10 +457,10 @@ filt_satlinkread(struct knote *kn, long hint)
 }
 
 static const struct filterops satlinkread_filtops =
-	{ 1, NULL, filt_satlinkrdetach, filt_satlinkread };
+	{ 1, NULL, filt_satlinkrdetach, filt_satlinkread, NULL };
 
 static const struct filterops satlink_seltrue_filtops =
-	{ 1, NULL, filt_satlinkrdetach, filt_seltrue };
+	{ 1, NULL, filt_satlinkrdetach, filt_seltrue, NULL };
 
 int
 satlinkkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/midi.c b/sys/dev/midi.c
index 9c3591374ac0..0382d06b4308 100644
--- a/sys/dev/midi.c
+++ b/sys/dev/midi.c
@@ -1764,7 +1764,7 @@ filt_midiread(struct knote *kn, long hint)
 }
 
 static const struct filterops midiread_filtops =
-	{ 1, NULL, filt_midirdetach, filt_midiread };
+	{ 1, NULL, filt_midirdetach, filt_midiread, NULL };
 
 static void
 filt_midiwdetach(struct knote *kn)
@@ -1808,7 +1808,7 @@ filt_midiwrite(struct knote *kn, long hint)
 }
 
 static const struct filterops midiwrite_filtops =
-	{ 1, NULL, filt_midiwdetach, filt_midiwrite };
+	{ 1, NULL, filt_midiwdetach, filt_midiwrite, NULL };
 
 int
 midikqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/pci/oboe.c b/sys/dev/pci/oboe.c
index d1332779792d..64b6981254e7 100644
--- a/sys/dev/pci/oboe.c
+++ b/sys/dev/pci/oboe.c
@@ -494,9 +494,9 @@ filt_oboewdetach(struct knote *kn)
 }
 
 static const struct filterops oboeread_filtops =
-	{ 1, NULL, filt_oboerdetach, filt_oboeread };
+	{ 1, NULL, filt_oboerdetach, filt_oboeread, NULL };
 static const struct filterops oboewrite_filtops =
-	{ 1, NULL, filt_oboewdetach, filt_seltrue };
+	{ 1, NULL, filt_oboewdetach, filt_seltrue, NULL };
 
 static int
 oboe_kqfilter(void *h, struct knote *kn)
diff --git a/sys/dev/putter/putter.c b/sys/dev/putter/putter.c
index cd2132e38d0a..5b7eb3ced5c6 100644
--- a/sys/dev/putter/putter.c
+++ b/sys/dev/putter/putter.c
@@ -491,7 +491,7 @@ filt_putter(struct knote *kn, long hint)
 }
 
 static const struct filterops putter_filtops =
-	{ 1, NULL, filt_putterdetach, filt_putter };
+	{ 1, NULL, filt_putterdetach, filt_putter, NULL };
 
 static int
 putter_fop_kqfilter(file_t *fp, struct knote *kn)
diff --git a/sys/dev/qbus/qd.c b/sys/dev/qbus/qd.c
index c27b30a1e77f..ea78ec5f71a4 100644
--- a/sys/dev/qbus/qd.c
+++ b/sys/dev/qbus/qd.c
@@ -1581,10 +1581,10 @@ filt_qdwrite(struct knote *kn, long hint)
 }
 
 static const struct filterops qdread_filtops =
-	{ 1, NULL, filt_qdrdetach, filt_qdread };
+	{ 1, NULL, filt_qdrdetach, filt_qdread, NULL };
 
 static const struct filterops qdwrite_filtops =
-	{ 1, NULL, filt_qdrdetach, filt_qdwrite };
+	{ 1, NULL, filt_qdrdetach, filt_qdwrite, NULL };
 
 int
 qdkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/sbus/bpp.c b/sys/dev/sbus/bpp.c
index 634ae158a68a..fe9fb37e4485 100644
--- a/sys/dev/sbus/bpp.c
+++ b/sys/dev/sbus/bpp.c
@@ -521,7 +521,7 @@ filt_bppread(struct knote *kn, long hint)
 }
 
 static const struct filterops bppread_filtops =
-	{ 1, NULL, filt_bpprdetach, filt_bppread };
+	{ 1, NULL, filt_bpprdetach, filt_bppread, NULL };
 
 static void
 filt_bppwdetach(struct knote *kn)
@@ -547,7 +547,7 @@ filt_bpfwrite(struct knote *kn, long hint)
 }
 
 static const struct filterops bppwrite_filtops =
-	{ 1, NULL, filt_bppwdetach, filt_bpfwrite };
+	{ 1, NULL, filt_bppwdetach, filt_bpfwrite, NULL };
 
 int
 bppkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/scsipi/ch.c b/sys/dev/scsipi/ch.c
index dcc8ae9731a8..5be1c33e5da5 100644
--- a/sys/dev/scsipi/ch.c
+++ b/sys/dev/scsipi/ch.c
@@ -488,10 +488,10 @@ filt_chread(struct knote *kn, long hint)
 }
 
 static const struct filterops chread_filtops =
-	{ 1, NULL, filt_chdetach, filt_chread };
+	{ 1, NULL, filt_chdetach, filt_chread, NULL };
 
 static const struct filterops chwrite_filtops =
-	{ 1, NULL, filt_chdetach, filt_seltrue };
+	{ 1, NULL, filt_chdetach, filt_seltrue, NULL };
 
 static int
 chkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/sequencer.c b/sys/dev/sequencer.c
index 2e673e262beb..48fa83b7f6fc 100644
--- a/sys/dev/sequencer.c
+++ b/sys/dev/sequencer.c
@@ -913,7 +913,7 @@ filt_sequencerread(struct knote *kn, long hint)
 }
 
 static const struct filterops sequencerread_filtops =
-	{ 1, NULL, filt_sequencerrdetach, filt_sequencerread };
+	{ 1, NULL, filt_sequencerrdetach, filt_sequencerread, NULL };
 
 static void
 filt_sequencerwdetach(struct knote *kn)
@@ -947,7 +947,7 @@ filt_sequencerwrite(struct knote *kn, long hint)
 }
 
 static const struct filterops sequencerwrite_filtops =
-	{ 1, NULL, filt_sequencerwdetach, filt_sequencerwrite };
+	{ 1, NULL, filt_sequencerwdetach, filt_sequencerwrite, NULL };
 
 static int
 sequencerkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/sun/event.c b/sys/dev/sun/event.c
index 4cd4934f1223..f829b28a76ac 100644
--- a/sys/dev/sun/event.c
+++ b/sys/dev/sun/event.c
@@ -197,7 +197,7 @@ filt_evread(struct knote *kn, long hint)
 }
 
 static const struct filterops ev_filtops =
-	{ 1, NULL, filt_evrdetach, filt_evread };
+	{ 1, NULL, filt_evrdetach, filt_evread, NULL };
 
 int
 ev_kqfilter(struct evvar *ev, struct knote *kn)
diff --git a/sys/dev/sysmon/sysmon_power.c b/sys/dev/sysmon/sysmon_power.c
index 4d9f4fe6de22..7149078ddf1a 100644
--- a/sys/dev/sysmon/sysmon_power.c
+++ b/sys/dev/sysmon/sysmon_power.c
@@ -558,10 +558,10 @@ filt_sysmon_power_read(struct knote *kn, long hint)
 }
 
 static const struct filterops sysmon_power_read_filtops =
-    { 1, NULL, filt_sysmon_power_rdetach, filt_sysmon_power_read };
+    { 1, NULL, filt_sysmon_power_rdetach, filt_sysmon_power_read, NULL };
 
 static const struct filterops sysmon_power_write_filtops =
-    { 1, NULL, filt_sysmon_power_rdetach, filt_seltrue };
+    { 1, NULL, filt_sysmon_power_rdetach, filt_seltrue, NULL };
 
 /*
  * sysmonkqfilter_power:
diff --git a/sys/dev/usb/udsir.c b/sys/dev/usb/udsir.c
index 999c5f794726..b33afaaa6f10 100644
--- a/sys/dev/usb/udsir.c
+++ b/sys/dev/usb/udsir.c
@@ -663,9 +663,9 @@ udsir_poll(void *h, int events, struct lwp *l)
 }
 
 static const struct filterops udsirread_filtops =
-	{ 1, NULL, filt_udsirrdetach, filt_udsirread };
+	{ 1, NULL, filt_udsirrdetach, filt_udsirread, NULL };
 static const struct filterops udsirwrite_filtops =
-	{ 1, NULL, filt_udsirwdetach, filt_udsirwrite };
+	{ 1, NULL, filt_udsirwdetach, filt_udsirwrite, NULL };
 
 static int
 udsir_kqfilter(void *h, struct knote *kn)
diff --git a/sys/dev/usb/ugen.c b/sys/dev/usb/ugen.c
index e345ba0116a8..56702ec6eaf3 100644
--- a/sys/dev/usb/ugen.c
+++ b/sys/dev/usb/ugen.c
@@ -2017,16 +2017,16 @@ filt_ugenwrite_bulk(struct knote *kn, long hint)
 }
 
 static const struct filterops ugenread_intr_filtops =
-	{ 1, NULL, filt_ugenrdetach, filt_ugenread_intr };
+	{ 1, NULL, filt_ugenrdetach, filt_ugenread_intr, NULL };
 
 static const struct filterops ugenread_isoc_filtops =
-	{ 1, NULL, filt_ugenrdetach, filt_ugenread_isoc };
+	{ 1, NULL, filt_ugenrdetach, filt_ugenread_isoc, NULL };
 
 static const struct filterops ugenread_bulk_filtops =
-	{ 1, NULL, filt_ugenrdetach, filt_ugenread_bulk };
+	{ 1, NULL, filt_ugenrdetach, filt_ugenread_bulk, NULL };
 
 static const struct filterops ugenwrite_bulk_filtops =
-	{ 1, NULL, filt_ugenrdetach, filt_ugenwrite_bulk };
+	{ 1, NULL, filt_ugenrdetach, filt_ugenwrite_bulk, NULL };
 
 int
 ugenkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/usb/uhid.c b/sys/dev/usb/uhid.c
index 497a08595562..f08d8ce27271 100644
--- a/sys/dev/usb/uhid.c
+++ b/sys/dev/usb/uhid.c
@@ -751,10 +751,10 @@ filt_uhidread(struct knote *kn, long hint)
 }
 
 static const struct filterops uhidread_filtops =
-	{ 1, NULL, filt_uhidrdetach, filt_uhidread };
+	{ 1, NULL, filt_uhidrdetach, filt_uhidread, NULL };
 
 static const struct filterops uhid_seltrue_filtops =
-	{ 1, NULL, filt_uhidrdetach, filt_seltrue };
+	{ 1, NULL, filt_uhidrdetach, filt_seltrue, NULL };
 
 int
 uhidkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/usb/uirda.c b/sys/dev/usb/uirda.c
index 0c03cb95617a..8f7153957c75 100644
--- a/sys/dev/usb/uirda.c
+++ b/sys/dev/usb/uirda.c
@@ -641,9 +641,9 @@ filt_uirdawdetach(struct knote *kn)
 }
 
 static const struct filterops uirdaread_filtops =
-	{ 1, NULL, filt_uirdardetach, filt_uirdaread };
+	{ 1, NULL, filt_uirdardetach, filt_uirdaread, NULL };
 static const struct filterops uirdawrite_filtops =
-	{ 1, NULL, filt_uirdawdetach, filt_seltrue };
+	{ 1, NULL, filt_uirdawdetach, filt_seltrue, NULL };
 
 int
 uirda_kqfilter(void *h, struct knote *kn)
diff --git a/sys/dev/usb/usb.c b/sys/dev/usb/usb.c
index 2f7b84051f31..d148d748c1a5 100644
--- a/sys/dev/usb/usb.c
+++ b/sys/dev/usb/usb.c
@@ -967,7 +967,7 @@ filt_usbread(struct knote *kn, long hint)
 }
 
 static const struct filterops usbread_filtops =
-	{ 1, NULL, filt_usbrdetach, filt_usbread };
+	{ 1, NULL, filt_usbrdetach, filt_usbread, NULL };
 
 int
 usbkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/usb/uscanner.c b/sys/dev/usb/uscanner.c
index 91fe0da348b6..4f70153650ea 100644
--- a/sys/dev/usb/uscanner.c
+++ b/sys/dev/usb/uscanner.c
@@ -677,7 +677,7 @@ filt_uscannerdetach(struct knote *kn)
 }
 
 static const struct filterops uscanner_seltrue_filtops =
-	{ 1, NULL, filt_uscannerdetach, filt_seltrue };
+	{ 1, NULL, filt_uscannerdetach, filt_seltrue, NULL };
 
 int
 uscannerkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/dev/usb/ustir.c b/sys/dev/usb/ustir.c
index c47de5d63c64..8f0b5d6cfdce 100644
--- a/sys/dev/usb/ustir.c
+++ b/sys/dev/usb/ustir.c
@@ -1088,9 +1088,9 @@ filt_ustirwrite(struct knote *kn, long hint)
 }
 
 static const struct filterops ustirread_filtops =
-	{ 1, NULL, filt_ustirrdetach, filt_ustirread };
+	{ 1, NULL, filt_ustirrdetach, filt_ustirread, NULL };
 static const struct filterops ustirwrite_filtops =
-	{ 1, NULL, filt_ustirwdetach, filt_ustirwrite };
+	{ 1, NULL, filt_ustirwdetach, filt_ustirwrite, NULL };
 
 Static int
 ustir_kqfilter(void *h, struct knote *kn)
diff --git a/sys/dev/wscons/wsevent.c b/sys/dev/wscons/wsevent.c
index 2966dc409429..b25075db2951 100644
--- a/sys/dev/wscons/wsevent.c
+++ b/sys/dev/wscons/wsevent.c
@@ -341,7 +341,7 @@ filt_wseventread(struct knote *kn, long hint)
 }
 
 static const struct filterops wsevent_filtops =
-	{ 1, NULL, filt_wseventrdetach, filt_wseventread };
+	{ 1, NULL, filt_wseventrdetach, filt_wseventread, NULL };
 
 int
 wsevent_kqfilter(struct wseventvar *ev, struct knote *kn)
diff --git a/sys/external/bsd/drm2/drm/drm_drv.c b/sys/external/bsd/drm2/drm/drm_drv.c
index 25e98b17551e..7327bf4753c4 100644
--- a/sys/external/bsd/drm2/drm/drm_drv.c
+++ b/sys/external/bsd/drm2/drm/drm_drv.c
@@ -511,7 +511,7 @@ static void	filt_drm_detach(struct knote *);
 static int	filt_drm_event(struct knote *, long);
 
 static const struct filterops drm_filtops =
-	{ 1, NULL, filt_drm_detach, filt_drm_event };
+	{ 1, NULL, filt_drm_detach, filt_drm_event, NULL };
 
 static int
 drm_kqfilter(struct file *fp, struct knote *kn)
diff --git a/sys/fs/smbfs/smbfs_kq.c b/sys/fs/smbfs/smbfs_kq.c
index 5430c3031694..a719b6fc9735 100644
--- a/sys/fs/smbfs/smbfs_kq.c
+++ b/sys/fs/smbfs/smbfs_kq.c
@@ -410,9 +410,9 @@ filt_smbfsvnode(struct knote *kn, long hint)
 }
 
 static const struct filterops smbfsread_filtops =
-	{ 1, NULL, filt_smbfsdetach, filt_smbfsread };
+	{ 1, NULL, filt_smbfsdetach, filt_smbfsread, NULL };
 static const struct filterops smbfsvnode_filtops =
-	{ 1, NULL, filt_smbfsdetach, filt_smbfsvnode };
+	{ 1, NULL, filt_smbfsdetach, filt_smbfsvnode, NULL };
 
 int
 smbfs_kqfilter(void *v)
diff --git a/sys/kern/kern_event.c b/sys/kern/kern_event.c
index 2ecbc1d7c00d..e4611dc1c8ed 100644
--- a/sys/kern/kern_event.c
+++ b/sys/kern/kern_event.c
@@ -31,6 +31,7 @@
 
 /*-
  * Copyright (c) 1999,2000,2001 Jonathan Lemon <jlemon@FreeBSD.org>
+ * Copyright (c) 2009 Apple, Inc
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -106,6 +107,10 @@ static void	filt_timerexpire(void *x);
 static int	filt_timerattach(struct knote *);
 static void	filt_timerdetach(struct knote *);
 static int	filt_timer(struct knote *, long hint);
+static int	filt_userattach(struct knote *);
+static void	filt_userdetach(struct knote *);
+static int	filt_user(struct knote *, long hint);
+static void	filt_usertouch(struct knote *, struct kevent *, long type);
 
 static const struct fileops kqueueops = {
 	.fo_read = (void *)enxio,
@@ -120,13 +125,15 @@ static const struct fileops kqueueops = {
 };
 
 static const struct filterops kqread_filtops =
-	{ 1, NULL, filt_kqdetach, filt_kqueue };
+	{ 1, NULL, filt_kqdetach, filt_kqueue, NULL };
 static const struct filterops proc_filtops =
-	{ 0, filt_procattach, filt_procdetach, filt_proc };
+	{ 0, filt_procattach, filt_procdetach, filt_proc, NULL };
 static const struct filterops file_filtops =
-	{ 1, filt_fileattach, NULL, NULL };
+	{ 1, filt_fileattach, NULL, NULL, NULL };
 static const struct filterops timer_filtops =
-	{ 0, filt_timerattach, filt_timerdetach, filt_timer };
+	{ 0, filt_timerattach, filt_timerdetach, filt_timer, NULL };
+static const struct filterops user_filtops =
+	{ 0, filt_userattach, filt_userdetach, filt_user, filt_usertouch };
 
 static u_int	kq_ncallouts = 0;
 static int	kq_calloutmax = (4 * 1024);
@@ -161,6 +168,7 @@ static struct kfilter sys_kfilters[] = {
 	{ "EVFILT_PROC",	EVFILT_PROC,	0, &proc_filtops, 0 },
 	{ "EVFILT_SIGNAL",	EVFILT_SIGNAL,	0, &sig_filtops, 0 },
 	{ "EVFILT_TIMER",	EVFILT_TIMER,	0, &timer_filtops, 0 },
+	{ "EVFILT_USER",	EVFILT_USER,	0, &user_filtops, 0 },
 	{ NULL,			0,		0, NULL, 0 },
 };
 
@@ -689,6 +697,106 @@ filt_timer(struct knote *kn, long hint)
 	return rv;
 }
 
+static int
+filt_userattach(struct knote *kn)
+{
+	struct kqueue *kq = kn->kn_kq;
+
+	/*
+	 * EVFILT_USER knotes are not attached to anything in the kernel.
+	 */
+	mutex_spin_enter(&kq->kq_lock);
+	kn->kn_hook = NULL;
+	if (kn->kn_fflags & NOTE_TRIGGER)
+		kn->kn_hookid = 1;
+	else
+		kn->kn_hookid = 0;
+	mutex_spin_exit(&kq->kq_lock);
+	return (0);
+}
+
+static void
+filt_userdetach(struct knote *kn)
+{
+
+	/*
+	 * EVFILT_USER knotes are not attached to anything in the kernel.
+	 */
+}
+
+static int
+filt_user(struct knote *kn, long hint)
+{
+	struct kqueue *kq = kn->kn_kq;
+	int hookid;
+
+	mutex_spin_enter(&kq->kq_lock);
+	hookid = kn->kn_hookid;
+	mutex_spin_exit(&kq->kq_lock);
+
+	return hookid;
+}
+
+static void
+filt_usertouch(struct knote *kn, struct kevent *kev, long type)
+{
+	struct kqueue *kq = kn->kn_kq;
+	int ffctrl;
+
+	mutex_spin_enter(&kq->kq_lock);
+	switch (type) {
+	case EVENT_REGISTER:
+		if (kev->fflags & NOTE_TRIGGER)
+			kn->kn_hookid = 1;
+
+		ffctrl = kev->fflags & NOTE_FFCTRLMASK;
+		kev->fflags &= NOTE_FFLAGSMASK;
+		switch (ffctrl) {
+		case NOTE_FFNOP:
+			break;
+
+		case NOTE_FFAND:
+			kn->kn_sfflags &= kev->fflags;
+			break;
+
+		case NOTE_FFOR:
+			kn->kn_sfflags |= kev->fflags;
+			break;
+
+		case NOTE_FFCOPY:
+			kn->kn_sfflags = kev->fflags;
+			break;
+
+		default:
+			/* XXX Return error? */
+			break;
+		}
+		kn->kn_sdata = kev->data;
+		if (kev->flags & EV_CLEAR) {
+			kn->kn_hookid = 0;
+			kn->kn_data = 0;
+			kn->kn_fflags = 0;
+		}
+		break;
+
+	case EVENT_PROCESS:
+		*kev = kn->kn_kevent;
+		kev->fflags = kn->kn_sfflags;
+		kev->data = kn->kn_sdata;
+		if (kn->kn_flags & EV_CLEAR) {
+			kn->kn_hookid = 0;
+			kn->kn_data = 0;
+			kn->kn_fflags = 0;
+		}
+		break;
+
+	default:
+		panic("filt_usertouch() - invalid type (%ld)", type);
+		break;
+	}
+	mutex_spin_exit(&kq->kq_lock);
+}
+
 /*
  * filt_seltrue:
  *
@@ -718,7 +826,7 @@ filt_seltruedetach(struct knote *kn)
 }
 
 const struct filterops seltrue_filtops =
-	{ 1, NULL, filt_seltruedetach, filt_seltrue };
+	{ 1, NULL, filt_seltruedetach, filt_seltrue, NULL };
 
 int
 seltrue_kqfilter(dev_t dev, struct knote *kn)
@@ -977,8 +1085,8 @@ kqueue_register(struct kqueue *kq, struct kevent *kev)
 	/*
 	 * kn now contains the matching knote, or NULL if no match
 	 */
-	if (kev->flags & EV_ADD) {
-		if (kn == NULL) {
+	if (kn == NULL) {
+		if (kev->flags & EV_ADD) {
 			/* create new knote */
 			kn = newkn;
 			newkn = NULL;
@@ -1038,42 +1146,52 @@ kqueue_register(struct kqueue *kq, struct kevent *kev)
 				goto done;
 			}
 			atomic_inc_uint(&kfilter->refcnt);
+			goto done_ev_add;
 		} else {
-			/*
-			 * The user may change some filter values after the
-			 * initial EV_ADD, but doing so will not reset any
-			 * filter which have already been triggered.
-			 */
-			kn->kn_sfflags = kev->fflags;
-			kn->kn_sdata = kev->data;
-			kn->kn_kevent.udata = kev->udata;
-		}
-		/*
-		 * We can get here if we are trying to attach
-		 * an event to a file descriptor that does not
-		 * support events, and the attach routine is
-		 * broken and does not return an error.
-		 */
-		KASSERT(kn->kn_fop != NULL);
-		KASSERT(kn->kn_fop->f_event != NULL);
-		KERNEL_LOCK(1, NULL);			/* XXXSMP */
-		rv = (*kn->kn_fop->f_event)(kn, 0);
-		KERNEL_UNLOCK_ONE(NULL);		/* XXXSMP */
-		if (rv)
-			knote_activate(kn);
-	} else {
-		if (kn == NULL) {
+			/* No matching knote and the EV_ADD flag is not set. */
 			error = ENOENT;
 		 	mutex_exit(&fdp->fd_lock);
 			goto done;
 		}
-		if (kev->flags & EV_DELETE) {
-			/* knote_detach() drops fdp->fd_lock */
-			knote_detach(kn, fdp, true);
-			goto done;
-		}
 	}
 
+	if (kev->flags & EV_DELETE) {
+		/* knote_detach() drops fdp->fd_lock */
+		knote_detach(kn, fdp, true);
+		goto done;
+	}
+
+	/*
+	 * The user may change some filter values after the
+	 * initial EV_ADD, but doing so will not reset any
+	 * filter which have already been triggered.
+	 */
+	kn->kn_kevent.udata = kev->udata;
+	KASSERT(kn->kn_fop != NULL);
+	if (!kn->kn_fop->f_isfd && kn->kn_fop->f_touch != NULL) {
+		KERNEL_LOCK(1, NULL);			/* XXXSMP */
+		(*kn->kn_fop->f_touch)(kn, kev, EVENT_REGISTER);
+		KERNEL_UNLOCK_ONE(NULL);		/* XXXSMP */
+	} else {
+		kn->kn_sfflags = kev->fflags;
+		kn->kn_sdata = kev->data;
+	}
+
+	/*
+	 * We can get here if we are trying to attach
+	 * an event to a file descriptor that does not
+	 * support events, and the attach routine is
+	 * broken and does not return an error.
+	 */
+done_ev_add:
+	KASSERT(kn->kn_fop != NULL);
+	KASSERT(kn->kn_fop->f_event != NULL);
+	KERNEL_LOCK(1, NULL);			/* XXXSMP */
+	rv = (*kn->kn_fop->f_event)(kn, 0);
+	KERNEL_UNLOCK_ONE(NULL);		/* XXXSMP */
+	if (rv)
+		knote_activate(kn);
+
 	/* disable knote */
 	if ((kev->flags & EV_DISABLE)) {
 		mutex_spin_enter(&kq->kq_lock);
@@ -1164,7 +1282,7 @@ kqueue_scan(file_t *fp, size_t maxevents, struct kevent *ulistp,
 	struct timespec	ats, sleepts;
 	struct knote	*kn, *marker, morker;
 	size_t		count, nkev, nevents;
-	int		timeout, error, rv;
+	int		timeout, error, touch, rv;
 	filedesc_t	*fdp;
 
 	fdp = curlwp->l_fd;
@@ -1275,8 +1393,20 @@ kqueue_scan(file_t *fp, size_t maxevents, struct kevent *ulistp,
 					continue;
 				}
 			}
+			KASSERT(kn->kn_fop != NULL);
+			touch = (!kn->kn_fop->f_isfd &&
+					kn->kn_fop->f_touch != NULL);
 			/* XXXAD should be got from f_event if !oneshot. */
-			*kevp++ = kn->kn_kevent;
+			if (touch) {
+				mutex_spin_exit(&kq->kq_lock);
+				KERNEL_LOCK(1, NULL);		/* XXXSMP */
+				(*kn->kn_fop->f_touch)(kn, kevp, EVENT_PROCESS);
+				KERNEL_UNLOCK_ONE(NULL);	/* XXXSMP */
+				mutex_spin_enter(&kq->kq_lock);
+			} else {
+				*kevp = kn->kn_kevent;
+			}
+			kevp++;
 			nkev++;
 			if (kn->kn_flags & EV_ONESHOT) {
 				/* delete ONESHOT events after retrieval */
@@ -1289,6 +1419,14 @@ kqueue_scan(file_t *fp, size_t maxevents, struct kevent *ulistp,
 				/* clear state after retrieval */
 				kn->kn_data = 0;
 				kn->kn_fflags = 0;
+				/*
+				 * Manually clear knotes who weren't
+				 * 'touch'ed.
+				 */
+				if (touch == 0) {
+					kn->kn_data = 0;
+					kn->kn_fflags = 0;
+				}
 				kn->kn_status &= ~(KN_QUEUED|KN_ACTIVE|KN_BUSY);
 			} else if (kn->kn_flags & EV_DISPATCH) {
 				kn->kn_status |= KN_DISABLED;
diff --git a/sys/kern/kern_sig.c b/sys/kern/kern_sig.c
index 8fece4b248ef..9fa253e4b9b6 100644
--- a/sys/kern/kern_sig.c
+++ b/sys/kern/kern_sig.c
@@ -2339,5 +2339,5 @@ filt_signal(struct knote *kn, long hint)
 }
 
 const struct filterops sig_filtops = {
-	0, filt_sigattach, filt_sigdetach, filt_signal
+	0, filt_sigattach, filt_sigdetach, filt_signal, NULL
 };
diff --git a/sys/kern/subr_cprng.c b/sys/kern/subr_cprng.c
index f7d1a8a833ef..a73588e739a0 100644
--- a/sys/kern/subr_cprng.c
+++ b/sys/kern/subr_cprng.c
@@ -257,7 +257,7 @@ static void	filt_cprng_detach(struct knote *);
 static int	filt_cprng_event(struct knote *, long);
 
 static const struct filterops cprng_filtops =
-	{ 1, NULL, filt_cprng_detach, filt_cprng_event };
+	{ 1, NULL, filt_cprng_detach, filt_cprng_event, NULL };
 
 int
 cprng_strong_kqfilter(struct cprng_strong *cprng, struct knote *kn)
diff --git a/sys/kern/subr_log.c b/sys/kern/subr_log.c
index f31658e90bc2..240ce9a5c4b3 100644
--- a/sys/kern/subr_log.c
+++ b/sys/kern/subr_log.c
@@ -290,7 +290,7 @@ filt_logread(struct knote *kn, long hint)
 }
 
 static const struct filterops logread_filtops =
-	{ 1, NULL, filt_logrdetach, filt_logread };
+	{ 1, NULL, filt_logrdetach, filt_logread, NULL };
 
 static int
 logkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/kern/sys_pipe.c b/sys/kern/sys_pipe.c
index d6191d49e527..dda7a67b1698 100644
--- a/sys/kern/sys_pipe.c
+++ b/sys/kern/sys_pipe.c
@@ -1447,9 +1447,9 @@ filt_pipewrite(struct knote *kn, long hint)
 }
 
 static const struct filterops pipe_rfiltops =
-	{ 1, NULL, filt_pipedetach, filt_piperead };
+	{ 1, NULL, filt_pipedetach, filt_piperead, NULL };
 static const struct filterops pipe_wfiltops =
-	{ 1, NULL, filt_pipedetach, filt_pipewrite };
+	{ 1, NULL, filt_pipedetach, filt_pipewrite, NULL };
 
 static int
 pipe_kqfilter(file_t *fp, struct knote *kn)
diff --git a/sys/kern/tty.c b/sys/kern/tty.c
index 8c6babafdbdd..55f2addf8609 100644
--- a/sys/kern/tty.c
+++ b/sys/kern/tty.c
@@ -1517,9 +1517,9 @@ filt_ttywrite(struct knote *kn, long hint)
 }
 
 static const struct filterops ttyread_filtops =
-	{ 1, NULL, filt_ttyrdetach, filt_ttyread };
+	{ 1, NULL, filt_ttyrdetach, filt_ttyread, NULL };
 static const struct filterops ttywrite_filtops =
-	{ 1, NULL, filt_ttywdetach, filt_ttywrite };
+	{ 1, NULL, filt_ttywdetach, filt_ttywrite, NULL };
 
 int
 ttykqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/kern/tty_pty.c b/sys/kern/tty_pty.c
index a0bbd8eb49c0..ea5ca0effc74 100644
--- a/sys/kern/tty_pty.c
+++ b/sys/kern/tty_pty.c
@@ -998,9 +998,9 @@ filt_ptcwrite(struct knote *kn, long hint)
 }
 
 static const struct filterops ptcread_filtops =
-	{ 1, NULL, filt_ptcrdetach, filt_ptcread };
+	{ 1, NULL, filt_ptcrdetach, filt_ptcread, NULL };
 static const struct filterops ptcwrite_filtops =
-	{ 1, NULL, filt_ptcwdetach, filt_ptcwrite };
+	{ 1, NULL, filt_ptcwdetach, filt_ptcwrite, NULL };
 
 int
 ptckqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/kern/uipc_socket.c b/sys/kern/uipc_socket.c
index 468b200eaaa3..158302f8009a 100644
--- a/sys/kern/uipc_socket.c
+++ b/sys/kern/uipc_socket.c
@@ -2336,11 +2336,11 @@ filt_solisten(struct knote *kn, long hint)
 }
 
 static const struct filterops solisten_filtops =
-	{ 1, NULL, filt_sordetach, filt_solisten };
+	{ 1, NULL, filt_sordetach, filt_solisten, NULL };
 static const struct filterops soread_filtops =
-	{ 1, NULL, filt_sordetach, filt_soread };
+	{ 1, NULL, filt_sordetach, filt_soread, NULL };
 static const struct filterops sowrite_filtops =
-	{ 1, NULL, filt_sowdetach, filt_sowrite };
+	{ 1, NULL, filt_sowdetach, filt_sowrite, NULL };
 
 int
 soo_kqfilter(struct file *fp, struct knote *kn)
diff --git a/sys/miscfs/fifofs/fifo_vnops.c b/sys/miscfs/fifofs/fifo_vnops.c
index f88ab95617f8..2c8c5867b198 100644
--- a/sys/miscfs/fifofs/fifo_vnops.c
+++ b/sys/miscfs/fifofs/fifo_vnops.c
@@ -580,9 +580,9 @@ filt_fifowrite(struct knote *kn, long hint)
 }
 
 static const struct filterops fiforead_filtops =
-	{ 1, NULL, filt_fifordetach, filt_fiforead };
+	{ 1, NULL, filt_fifordetach, filt_fiforead, NULL };
 static const struct filterops fifowrite_filtops =
-	{ 1, NULL, filt_fifowdetach, filt_fifowrite };
+	{ 1, NULL, filt_fifowdetach, filt_fifowrite, NULL };
 
 /* ARGSUSED */
 static int
diff --git a/sys/miscfs/genfs/genfs_vnops.c b/sys/miscfs/genfs/genfs_vnops.c
index 1c8e4067034e..312d5fc2fce0 100644
--- a/sys/miscfs/genfs/genfs_vnops.c
+++ b/sys/miscfs/genfs/genfs_vnops.c
@@ -555,11 +555,11 @@ filt_genfsvnode(struct knote *kn, long hint)
 }
 
 static const struct filterops genfsread_filtops =
-	{ 1, NULL, filt_genfsdetach, filt_genfsread };
+	{ 1, NULL, filt_genfsdetach, filt_genfsread, NULL };
 static const struct filterops genfswrite_filtops =
-	{ 1, NULL, filt_genfsdetach, filt_genfswrite };
+	{ 1, NULL, filt_genfsdetach, filt_genfswrite, NULL };
 static const struct filterops genfsvnode_filtops =
-	{ 1, NULL, filt_genfsdetach, filt_genfsvnode };
+	{ 1, NULL, filt_genfsdetach, filt_genfsvnode, NULL };
 
 int
 genfs_kqfilter(void *v)
diff --git a/sys/net/bpf.c b/sys/net/bpf.c
index e33b35d3b74e..b824573db891 100644
--- a/sys/net/bpf.c
+++ b/sys/net/bpf.c
@@ -1482,7 +1482,7 @@ filt_bpfread(struct knote *kn, long hint)
 }
 
 static const struct filterops bpfread_filtops =
-	{ 1, NULL, filt_bpfrdetach, filt_bpfread };
+	{ 1, NULL, filt_bpfrdetach, filt_bpfread, NULL };
 
 static int
 bpf_kqfilter(struct file *fp, struct knote *kn)
diff --git a/sys/net/if_tap.c b/sys/net/if_tap.c
index dc9307600ba0..d8a165e6291c 100644
--- a/sys/net/if_tap.c
+++ b/sys/net/if_tap.c
@@ -1233,9 +1233,9 @@ tap_dev_poll(int unit, int events, struct lwp *l)
 }
 
 static struct filterops tap_read_filterops = { 1, NULL, tap_kqdetach,
-	tap_kqread };
+	tap_kqread, NULL };
 static struct filterops tap_seltrue_filterops = { 1, NULL, tap_kqdetach,
-	filt_seltrue };
+	filt_seltrue, NULL };
 
 static int
 tap_cdev_kqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/net/if_tun.c b/sys/net/if_tun.c
index a380cd491239..9a76ab52b625 100644
--- a/sys/net/if_tun.c
+++ b/sys/net/if_tun.c
@@ -1078,10 +1078,10 @@ filt_tunread(struct knote *kn, long hint)
 }
 
 static const struct filterops tunread_filtops =
-	{ 1, NULL, filt_tunrdetach, filt_tunread };
+	{ 1, NULL, filt_tunrdetach, filt_tunread, NULL };
 
 static const struct filterops tun_seltrue_filtops =
-	{ 1, NULL, filt_tunrdetach, filt_seltrue };
+	{ 1, NULL, filt_tunrdetach, filt_seltrue, NULL };
 
 int
 tunkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/netisdn/i4b_i4bdrv.c b/sys/netisdn/i4b_i4bdrv.c
index 0c8b5ab40079..5ca36c5340f9 100644
--- a/sys/netisdn/i4b_i4bdrv.c
+++ b/sys/netisdn/i4b_i4bdrv.c
@@ -992,10 +992,10 @@ filt_i4bread(struct knote *kn, long hint)
 }
 
 static const struct filterops i4bread_filtops =
-	{ 1, NULL, filt_i4brdetach, filt_i4bread };
+	{ 1, NULL, filt_i4brdetach, filt_i4bread, NULL };
 
 static const struct filterops i4b_seltrue_filtops =
-	{ 1, NULL, filt_i4brdetach, filt_seltrue };
+	{ 1, NULL, filt_i4brdetach, filt_seltrue, NULL };
 
 int
 isdnkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/netisdn/i4b_rbch.c b/sys/netisdn/i4b_rbch.c
index 78bf4d696fec..f6d1ade751c5 100644
--- a/sys/netisdn/i4b_rbch.c
+++ b/sys/netisdn/i4b_rbch.c
@@ -843,7 +843,7 @@ filt_i4brbchread(struct knote *kn, long hint)
 }
 
 static const struct filterops i4brbchread_filtops =
-	{ 1, NULL, filt_i4brbchdetach, filt_i4brbchread };
+	{ 1, NULL, filt_i4brbchdetach, filt_i4brbchread, NULL };
 
 static int
 filt_i4brbchwrite(struct knote *kn, long hint)
@@ -861,7 +861,7 @@ filt_i4brbchwrite(struct knote *kn, long hint)
 }
 
 static const struct filterops i4brbchwrite_filtops =
-	{ 1, NULL, filt_i4brbchdetach, filt_i4brbchwrite };
+	{ 1, NULL, filt_i4brbchdetach, filt_i4brbchwrite, NULL };
 
 int
 isdnbchankqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/netisdn/i4b_tel.c b/sys/netisdn/i4b_tel.c
index df505ef12a5e..aa2db8ef07f6 100644
--- a/sys/netisdn/i4b_tel.c
+++ b/sys/netisdn/i4b_tel.c
@@ -985,7 +985,7 @@ filt_i4btel_telread(struct knote *kn, long hint)
 }
 
 static const struct filterops i4btel_telread_filtops =
-	{ 1, NULL, filt_i4btel_detach, filt_i4btel_telread };
+	{ 1, NULL, filt_i4btel_detach, filt_i4btel_telread, NULL };
 
 static int
 filt_i4btel_telwrite(struct knote *kn, long hint)
@@ -1004,7 +1004,7 @@ filt_i4btel_telwrite(struct knote *kn, long hint)
 }
 
 static const struct filterops i4btel_telwrite_filtops =
-	{ 1, NULL, filt_i4btel_detach, filt_i4btel_telwrite };
+	{ 1, NULL, filt_i4btel_detach, filt_i4btel_telwrite, NULL };
 
 static int
 filt_i4btel_dialread(struct knote *kn, long hint)
@@ -1019,10 +1019,10 @@ filt_i4btel_dialread(struct knote *kn, long hint)
 }
 
 static const struct filterops i4btel_dialread_filtops =
-	{ 1, NULL, filt_i4btel_detach, filt_i4btel_dialread };
+	{ 1, NULL, filt_i4btel_detach, filt_i4btel_dialread, NULL };
 
 static const struct filterops i4btel_seltrue_filtops =
-	{ 1, NULL, filt_i4btel_detach, filt_seltrue };
+	{ 1, NULL, filt_i4btel_detach, filt_seltrue, NULL };
 
 int
 isdntelkqfilter(dev_t dev, struct knote *kn)
diff --git a/sys/nfs/nfs_kq.c b/sys/nfs/nfs_kq.c
index 6305a328e7c5..804ebe74b869 100644
--- a/sys/nfs/nfs_kq.c
+++ b/sys/nfs/nfs_kq.c
@@ -280,9 +280,9 @@ filt_nfsvnode(struct knote *kn, long hint)
 
 
 static const struct filterops nfsread_filtops =
-	{ 1, NULL, filt_nfsdetach, filt_nfsread };
+	{ 1, NULL, filt_nfsdetach, filt_nfsread, NULL };
 static const struct filterops nfsvnode_filtops =
-	{ 1, NULL, filt_nfsdetach, filt_nfsvnode };
+	{ 1, NULL, filt_nfsdetach, filt_nfsvnode, NULL };
 
 int
 nfs_kqfilter(void *v)
diff --git a/sys/sys/event.h b/sys/sys/event.h
index 135617e4b4f0..6e86ed8e4c85 100644
--- a/sys/sys/event.h
+++ b/sys/sys/event.h
@@ -43,7 +43,8 @@
 #define	EVFILT_PROC		4U	/* attached to struct proc */
 #define	EVFILT_SIGNAL		5U	/* attached to struct proc */
 #define	EVFILT_TIMER		6U	/* arbitrary timer (in ms) */
-#define	EVFILT_SYSCOUNT		7U	/* number of filters */
+#define	EVFILT_USER		7U	/* user events */
+#define	EVFILT_SYSCOUNT		8U	/* number of filters */
 
 struct kevent {
 	uintptr_t	ident;		/* identifier for this event */
@@ -88,6 +89,26 @@ EV_SET_(struct kevent *_kevp, uintptr_t _ident, uint32_t _filter,
 #define	EV_EOF		0x8000U		/* EOF detected */
 #define	EV_ERROR	0x4000U		/* error, data contains errno */
 
+/*
+ * data/hint flags/masks for EVFILT_USER, shared with userspace
+ *
+ * On input, the top two bits of fflags specifies how the lower twenty four
+ * bits should be applied to the stored value of fflags.
+ *
+ * On output, the top two bits will always be set to NOTE_FFNOP and the
+ * remaining twenty four bits will contain the stored fflags value.
+ */
+#define	NOTE_FFNOP	0x00000000U		/* ignore input fflags */
+#define	NOTE_FFAND	0x40000000U		/* AND fflags */
+#define	NOTE_FFOR	0x80000000U		/* OR fflags */
+#define	NOTE_FFCOPY	0xc0000000U		/* copy fflags */
+
+#define	NOTE_FFCTRLMASK	0xc0000000U		/* masks for operations */
+#define	NOTE_FFLAGSMASK	0x00ffffffU
+
+#define	NOTE_TRIGGER	0x01000000U		/* Cause the event to be
+						   triggered for output. */
+
 /*
  * hint flag for in-kernel use - must not equal any existing note
  */
@@ -159,6 +180,16 @@ struct kfilter_mapping {
  */
 #define	NOTE_SIGNAL	0x08000000U
 
+/*
+ * Hint values for the optional f_touch event filter.  If f_touch is not set
+ * to NULL and f_isfd is zero the f_touch filter will be called with the type
+ * argument set to EVENT_REGISTER during a kevent() system call.  It is also
+ * called under the same conditions with the type argument set to EVENT_PROCESS
+ * when the event has been triggered.
+ */
+#define	EVENT_REGISTER	1
+#define	EVENT_PROCESS	2
+
 /*
  * Callback methods for each filter type.
  */
@@ -170,6 +201,7 @@ struct filterops {
 					/* called when knote is DELETEd */
 	int	(*f_event)	(struct knote *, long);
 					/* called when event is triggered */
+	void	(*f_touch)	(struct knote *, struct kevent *, long);
 };
 
 /*
@@ -194,6 +226,7 @@ struct knote {
 	const struct filterops	*kn_fop;
 	struct kfilter		*kn_kfilter;
 	void 			*kn_hook;
+	int			kn_hookid;
 
 #define	KN_ACTIVE	0x01U			/* event has been triggered */
 #define	KN_QUEUED	0x02U			/* event is on queue */
